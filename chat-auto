#!/bin/bash

# Valeurs par défaut pour les options
MODE=""

# Demander le nom d'utilisateur
read -p "Entrez votre nom d'utilisateur : " USERNAME
if [[ -z "$USERNAME" ]]; then
    echo "Erreur : Le nom d'utilisateur ne peut pas être vide."
    exit 1
fi

# Demander le mode (optionnel)
read -p "Entrez le mode (bot ou manuel, laissez vide pour aucun mode) : " MODE

# Construire la commande
CMD="./chat $USERNAME"  # Le nom d'utilisateur est un argument obligatoire

# Ajouter le mode si fourni
if [[ -n "$MODE" ]]; then
    CMD="$CMD --$MODE"
fi

# Créer un pipe nommé pour la communication
PIPE_NAME="/tmp/chat_pipe"
if [[ ! -p "$PIPE_NAME" ]]; then
    mkfifo "$PIPE_NAME"
fi

# Exécuter le programme client avec la commande, en redirigeant l'entrée depuis le pipe
$CMD < "$PIPE_NAME" &  # Exécuter le client de chat en arrière-plan
CLIENT_PID=$!

# Attendre l'initialisation du client avant de continuer
sleep 1

# Fonction pour demander le nom d'utilisateur du destinataire
prompt_for_recipient() {
    read -p "Entrez le nom d'utilisateur du destinataire : " RECIPIENT
    if [[ -z "$RECIPIENT" ]]; then
        echo "Aucun destinataire spécifié, sortie."
        kill "$CLIENT_PID"
        rm "$PIPE_NAME"
        exit 0
    fi
}

# Demande initiale du destinataire
prompt_for_recipient

# Boucle pour lire et envoyer les messages individuellement de façon continue
while true; do
    echo "Entrez votre message (Ctrl+D pour changer de destinataire ou quitter) :"
    
    # Lire l'entrée de l'utilisateur
    if ! IFS= read -r MESSAGE; then
        echo "Aucun message saisi. Sortie."
        break
    fi

    # Si l'utilisateur entre un message vide, passer
    if [[ -z "$MESSAGE" ]]; then
        continue
    fi

    # Ajouter le nom du destinataire au début du message
    MESSAGE="$RECIPIENT $MESSAGE"
    # Écrire le message dans le pipe
    echo -e "$MESSAGE" > "$PIPE_NAME"
    sleep 0.5
    
done

# Nettoyage à la sortie
kill "$CLIENT_PID"
rm "$PIPE_NAME"

